// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "sosmed/features/comment/domain"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Del provides a mock function with given fields: ID
func (_m *Repository) Del(ID int) error {
	ret := _m.Called(ID)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(ID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Insert provides a mock function with given fields: newComment
func (_m *Repository) Insert(newComment domain.Core) (domain.Cores, error) {
	ret := _m.Called(newComment)

	var r0 domain.Cores
	if rf, ok := ret.Get(0).(func(domain.Core) domain.Cores); ok {
		r0.Name = "Gerry"
		r0 = rf(newComment)
	} else {
		r0 = ret.Get(0).(domain.Cores)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.Core) error); ok {
		r1 = rf(newComment)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepository(t mockConstructorTestingTNewRepository) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
